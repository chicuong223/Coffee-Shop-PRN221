@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@{
	var session = HttpContextAccessor.HttpContext.Session;
	var username = session.GetString("Username");
	var role = session.GetString("Role");
}
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>コーヒー Store</title>
	<link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3"
      crossorigin="anonymous"
    />
	<link rel="stylesheet" href="~/css/global.css" />
	<link rel="stylesheet" href="~/css/paging.css" />
	<link rel="stylesheet" href="~/css/navbar.css" />
</head>
<body>
	@if(TempData["Error"] != null)
	{
		<div
      class="toast position-absolute top-0 end-0 m-3 text-white bg-danger"
      role="alert"
      aria-live="assertive"
      aria-atomic="true"
      style="z-index: 10000"
      data-bs-delay="2000"
    >
      <div class="d-flex">
        <div class="toast-body">@TempData["Error"]</div>
        <button
          type="button"
          class="btn-close btn-close-white me-2 m-auto"
          data-bs-dismiss="toast"
          aria-label="Close"
        ></button>
      </div>
    </div>
	}
	
	<div class="navbar-container">
		<ul class="navbar">
			<li class="list-item header">
				<a href="#">
					<span class="icon"><ion-icon name="storefront-outline"></ion-icon></span>
					<span class="title">コーヒー</span>
				</a>
			</li>
			@{
				if (role != null && role.Equals("Admin"))
				{
					<li class="list-item">
						<a asp-page="/Bills/Index">
							<span class="icon">
								<ion-icon name="receipt-outline"></ion-icon>
							</span>
							<span class="title">Bills</span>
						</a>
					</li>
					<li class="list-item">
						<a asp-page="/Staff/Index">
							<span class="icon">
								<ion-icon name="people-outline"></ion-icon>
							</span>
							<span class="title">Employees</span>
						</a>
					</li>
					<li class="list-item">
						<a asp-page="/Products/Index">
							<span class="icon"><ion-icon name="file-tray-stacked-outline"></ion-icon></span>
							<span class="title">Products</span>
						</a>
					</li>
					<li class="list-item">
						<a asp-page="/Notifications/Index">
							<span class="icon"><ion-icon name="notifications-outline"></ion-icon></span>
							<span class="title">Notifications</span>
						</a>
					</li>
				}
				else
				{
					<li class="list-item">
						<a asp-page="/Index">
							<span class="icon"><ion-icon name="home-outline"></ion-icon></span>
							<span class="title">Home</span>
						</a>
					</li>
					<li class="list-item">
						<a asp-page="/Stock">
							<span class="icon"><ion-icon name="grid-outline"></ion-icon></span>
							<span class="title">Stock</span>
						</a>
					</li>
				}
			}

			<li class="list-item">
				<form style="width: 100%;" id="logout-submit" method="post" asp-page="/Authenticate/Login" asp-page-handler="Logout">
					<a href="#" onclick="document.getElementById('logout-submit').submit();">

						<span class="icon">
							<ion-icon name="log-out-outline"></ion-icon>
						</span>
						<span class="title">Log out</span>

					</a>
				</form>
			</li>

		</ul>
	</div>
	<div class="container-fluid main-container">
		<main role="main" class="main container-fluid p-0">
			@RenderBody()
		</main>
	</div>

	<script type="module"
			src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
	<script nomodule
			src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>
	<script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
      crossorigin="anonymous"
    ></script>
	<script defer>
		const toggle = document.querySelector('.navbar-toggle');
		toggle.addEventListener('click', () => {
			document.querySelector('.navbar-toggle').classList.toggle('active');
			document.querySelector('.navbar-container').classList.toggle('active');
			document.querySelector('.main-container').classList.toggle('active');
		});
		var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
		var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
			return new bootstrap.Tooltip(tooltipTriggerEl)
		});
		window.onload = (event) => {
        let myAlert = document.querySelector(".toast");
        let bsAlert = new bootstrap.Toast(myAlert);
        console.log(bsAlert);
        bsAlert.show();
      };
	</script>
	@await RenderSectionAsync("Scripts", required: false)
</body>
</html>
