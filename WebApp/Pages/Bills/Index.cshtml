@page
@using X.PagedList.Mvc.Core
@model Pages.Bills.IndexModel
@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor HttpContextAccessor;

@{
    ViewData["Title"] = "Index";
    var session = HttpContextAccessor.HttpContext.Session;
    var username = session.GetString("Username");
    var role = session.GetString("Role");
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<form method="get">
    <div class="form-group">
        <label asp-for="From" class="control-label"></label>
        <input asp-for="From" class="form-control" value="@(Model.From.HasValue?Model.From.Value.Date.ToString("yyyy-MM-dd"):null)"/>
        <span asp-validation-for="From" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="To" class="control-label"></label>
        <input asp-for="To" class="form-control" value="@(Model.To.HasValue?Model.To.Value.Date.ToString("yyyy-MM-dd"):null)"/>
        <span asp-validation-for="To" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="submit" value="Search" class="btn btn-primary" />
        <a asp-page="./Index" class="btn btn-primary">Full list</a>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Bills[0].BillDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Bills[0].Discount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Bills[0].Status)
            </th>
            <th>
                Staff
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Bills[0].Voucher)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Bills)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.BillDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Discount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StaffUsernameNavigation.Username)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Voucher.Id)
                </td>
                <td>
                    @{
                        if (!item.Status.Value)
                        {
                            <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a>
                        }
                    }
                    <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                    @{
                        if (role != null && role.Equals("Admin"))
                                        {
                            <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<br />
Page @(Model.Bills.PageCount < Model.Bills.PageNumber ? 0 : Model.Bills.PageNumber) of @Model.Bills.PageCount

@Html.PagedListPager( Model.Bills, pageIndex => Url.Page("Index", new { pageIndex , From=Model.From, To=Model.To}) )
