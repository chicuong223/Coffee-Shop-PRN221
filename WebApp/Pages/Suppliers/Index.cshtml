@page
@using X.PagedList.Mvc.Core
@model Pages.Suppliers.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Supplier[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Supplier[0].Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Supplier[0].Status)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Supplier)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    @(item.Status?"Active":"Disabled")
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.Id">Deactivate</a>
                </td>
            </tr>
        }
    </tbody>
</table>
Page @(Model.Supplier.PageCount < Model.Supplier.PageNumber ? 0 : Model.Supplier.PageNumber) of @Model.Supplier.PageCount

@Html.PagedListPager(Model.Supplier, pageIndex => Url.Page("Index", new { pageIndex }))